using UnityEngine;
using System.Collections;

public interface ITradeable
{
    float Price { get; set; }
}


public class Consumer : MonoBehaviour {

    //规则1 存钱习惯 若存款未满 每次从收入中提取部分存入存款
    //规则2 刨去存款部分的收入, 作为每次购物的预算
    //规则3 购物时优先满足基本需求

    //测试场景 100G = 20G购买食物A
    //市场 食物A.p=1 食物B.p=2 食物C.p=3 如何选择食物 热量/价格? 分量/价格?(分量作为热量单位)
    //当最贫穷时, 购买最低价食物 直到饱腹
    //对食物的需求是均衡的 当最富有的时候, 购买比例为1:1:1
    
    //希望所有食物种类都尽可能的加入食谱
    //设a,b,c分别为购买3中食物数量
    //a*ap + b*bp + c*cp = 20G 总价不超过20G
    //a+b+c = 10 总分量大于10
    //a+2b+3c = 20
    //价格与购买量成反比 价格总数1+2+3 = 6, a,b,c分别占比 6/1 , 6/2, 6/3 = 6,3,2 = 6/11, 3/11, 2/11

    //合理分配资金使收益最大化
    //100G 要满足 食物 衣着 日常 等多个方面的消耗
    //硬性需求满足后才可考虑其他需求, 例如普通的食物满足后, 才可考虑普通的衣着, 所有需求达到普通级后, 才考虑丰富的食物
    //考虑 什么程度的食物配比算是丰富的食物 可以支撑更高级的其他需求?
    //如何用数学模型实现各项需求之间的关系?

    //各项需求的 效用/金钱比 为 食物10 衣着6 日常3
    //为使各项需求满足度达到均衡 各项需求投入金钱为 
    //10a=6b=3c a=0.6b=0.3c
    //a+b+c = 100G 0.3c+.5c+c = 100 1.8c = 100
}
